DOM
本质：html文件解析出来的一棵树

property:修改对象属性。不会体现到html结构中
attribute：修改html属性，会改变html结构
两者都有可能引起DOM重新渲染

DOM性能
  DOM操作非常"昂贵"，避免频繁的DOM操作
  对DOM查询做缓存
  将频繁操作改为一次性操作


BOM
api


事件
事件代理：代码简洁，减少浏览器内存占用，不要滥用

ajax
  xhr.readyState:
  0-(未初始化)还没有调用send()方法
  1-(载入)已调用send()方法，正在发送请求
  2-(载入完成)send()方法执行完成，已经接收到全部相应内容
  3-(交互)正在解析响应内容
  4-(完成)相应内容解析完成，可以在客户端调用
ajax请求get和post的区别
  get一般用于查询操作，post一般用户提交操作
  get参数拼接在url上，post放在请求体内(数据体积更大)
  安全性：post可以预防CSPF

xhr.states:
2xx-表示成功处理请求，如200
3xx-需要重定向。浏览器直接跳转，如301 302 304
4xx-客户端请求错误，如404 403
5xx-服务端错误

什么是JSON？
json是一种数据格式，本质是一段字符串
json格式和JS对象结构一致，对JS语言更友好
window.JSON是一个全局对象:JSON.stringify  JSON.parse
不能有单引号，都需要双引号

跨域
  同源策略：ajax请求时，浏览器要求当前网页和server必须同源(安全)
  同源：协议，域名，端口，三者必须一致
  加载图片，css，js可无视同源策略
  <img/>可用于统计打点，可使用第三方统计服务
  <link/><script>可使用CDN,CDN一般都是外域
  <script>可实现JSONP

JSONP
  服务器可以任意拼接数据返回，只要符合html格式要求
  因为<script>可绕过跨域限制，服务器可以任意动态拼接数据返回
  所以,<script>就可以获得跨域的数据,只要服务端愿意返回

解释jsonp原理，为何不是真正的ajax
  浏览器的通远策略（服务端没有通远策略）和跨域
  可以用做跨域的html标签,<img/>, <link/>,<script>
  原理：
  script标签src属性中的链接可以访问跨域的js脚本，
  利用这个特性，用户传递一个callback参数给服务端，
  然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据返回，
  服务端不再返回JSON格式的数据，
  而是返回一段调用某个函数的js代码，在src中进行了调用，这样实现了跨域









